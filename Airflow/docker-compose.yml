version: "3.3"

services:
  postgres:
    container_name: airflow_postgres
    image: postgres:13-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./volume/postgres-scripts:/docker-scripts
    environment:
      - POSTGRES_DB=airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
    networks:
      airflow_default:
        ipv4_address: 172.18.0.2

  redis:
    container_name: airflow_redis
    image: redis:alpine3.12
    restart: always
    ports:
      - "6379:6379"
    networks:
      airflow_default:
        ipv4_address: 172.18.0.3

  webserver:
    container_name: airflow_webserver
    image: lab-airflow:demo
    build:
      context: $PWD
      dockerfile: Dockerfile
    depends_on:
      - postgres
    restart: always
    ports:
      - "8080:8080"
    networks:
      - airflow_default
    command: webserver
    volumes:
      - ./volume/operators:/opt/airflow/plugins/operators

  scheduler:
    container_name: airflow_scheduler
    image: lab-airflow:demo
    depends_on:
      # wait for image created in webserver
      - webserver
    restart: always
    networks:
      - airflow_default
    command: scheduler
    volumes:
      - ./volume/dags:/opt/airflow/dags

  worker:
    container_name: airflow_worker
    image: lab-airflow:demo
    depends_on:
      - webserver
      - redis
    restart: always
    ports:
      - "8793:8793"
    networks:
      - airflow_default
    command: worker
    volumes:
      - ./volume/dags:/opt/airflow/dags

networks:
  airflow_default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
