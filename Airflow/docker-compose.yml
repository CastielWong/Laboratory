version: "3.5"

x-airflow-worker:
  &airflow-worker
  restart: always
  image: lab-airflow:demo
  command: worker
  networks:
    - airflow_demo
  volumes:
    - ./volume/dags:/opt/airflow/dags
  depends_on:
    - webserver

services:
  postgres:
    restart: always
    container_name: airflow_postgres
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
    networks:
      airflow_demo:
        ipv4_address: 172.18.0.2
    ports:
      - "5432:5432"
    volumes:
      - ./volume/postgres-scripts:/docker-scripts

  redis:
    restart: always
    container_name: airflow_redis
    image: redis:6.2.1-alpine3.13
    networks:
      airflow_demo:
        ipv4_address: 172.18.0.3
    ports:
      - "6379:6379"

  webserver:
    restart: always
    container_name: airflow_webserver
    image: lab-airflow:demo
    build:
      context: $PWD
      dockerfile: Dockerfiles/demo
    command: webserver
    networks:
      - airflow_demo
    ports:
      - "8080:8080"
    volumes:
      - ./volume/operators:/opt/airflow/plugins/operators
    depends_on:
      - postgres
      - redis

  scheduler:
    restart: always
    container_name: airflow_scheduler
    image: lab-airflow:demo
    command: scheduler
    networks:
      - airflow_demo
    volumes:
      - ./volume/dags:/opt/airflow/dags
    depends_on:
      # wait for image created in webserver
      - webserver

  flower:
    restart: always
    container_name: airflow_flower
    image: lab-airflow:demo
    command: flower
    networks:
      - airflow_demo
    ports:
      - "5555:5555"
    volumes:
      - ./volume/dags:/opt/airflow/dags
    depends_on:
      - webserver

  # worker:
  #   restart: always
  #   container_name: airflow_worker
  #   image: lab-airflow:demo
  #   command: worker
  #   networks:
  #     - airflow_demo
  #   ports:
  #     - "8793:8793"
  #   volumes:
  #     - ./volume/dags:/opt/airflow/dags
  #   depends_on:
  #     - webserver

  worker_1:
    <<: *airflow-worker
    container_name: airflow_worker_1

  worker_2:
    <<: *airflow-worker
    container_name: airflow_worker_2

networks:
  airflow_demo:
    name: airflow_demo
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
